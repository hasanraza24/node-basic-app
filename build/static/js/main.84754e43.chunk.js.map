{"version":3,"sources":["containers/header/header.container.js","utils/utils.js","constants/index.js","containers/error-msgs-bsr/err-msg-bar.js","containers/home/home.container.js","containers/inner-page/innner-page.container.js","containers/reset-password/reset-password.container.js","router/index.js","reducers/component.reduers/reducer.home.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["Header","logOutuser","localStorage","removeItem","_this","props","history","push","getUsername","username","getItem","console","log","react_default","a","createElement","className","goToHome","onClick","this","Component","postCallApi","api_url","body","fetch","method","headers","Accept","Content-Type","JSON","stringify","then","res","json","data","Promise","resolve","catch","error","reject","API_URL","Snackbar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showSnackbar","errMsg","setState","x","document","getElementById","setTimeout","replace","state","id","Home","registerUser","e","preventDefault","email","value","password","passwordCheck","name","concat","success","loginFormOpen","showError","current","message","alert","loginUser","setItem","token","user","_id","pathname","togglePopup","formName","showWarning","target","nShow","disable","setPass","forgotPwd","React","createRef","_this2","style","margin","onSubmit","type","required","placeholder","marginLeft","color","cursor","ref","fontFamily","fontSize","marginTop","fontWeight","textAlign","onChange","disabled","err_msg_bar","connect","dispatch","InnerPage","ResetPwd","resetPassword","verCode","values","queryString","parse","location","search","router","react_router_dom","react_router","exact","path","component","render","to","home_container","innner_page_container","initialState","loading","rootReducer","combineReducers","homeReducer","arguments","length","undefined","objectSpread","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","hostname","match","ReactDOM","es","Router","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84754e43.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../../main.css';\n\nclass Header extends Component {\n\n    logOutuser = () => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"username\");\n        this.props.history.push(\"/\");\n    };\n\n    getUsername = () =>{\n        let username = localStorage.getItem(\"username\");\n        console.log('username', username);\n        return <div className=\"username-header\">{username}</div>;\n    }\n\n    goToHome = () =>{\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return (\n        <div className=\"App\">\n        <div className=\"nav-header\">\n        <div className=\"comp-name\" onClick={this.goToHome}>Decoder</div>\n        {this.getUsername()}\n        {localStorage.getItem(\"username\") && <div className=\"logout-button\" onClick={this.logOutuser}>Logout</div>}\n        </div>\n        </div>\n        );\n    }\n}\n\nexport default Header;","export const postCallApi = (api_url, body) => {\n    return fetch(api_url, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body)\n    })\n        .then((res) => res.json())\n        .then(data => {\n            return Promise.resolve(data);\n        })\n        .catch(error => {\n            return Promise.reject(error);\n        });\n};\n\nexport const getCallApi = (api_url) => {\n    return fetch(api_url)\n        .then((res) => res.json())\n        .then(data => {\n            return Promise.resolve(data);\n        })\n        .catch((error) => {\n            return Promise.reject(error);\n        });\n\n}","export const SAVE_BROWSER_NAME = 'SAVE_BROWSER_NAME';\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const API_URL = 'https://ceegees.herokuapp.com/api';","import React, { Component } from 'react';\n\nclass Snackbar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errMsg: ''\n        }\n    }\n\n    showSnackbar = (errMsg) => {\n        this.setState({\n            errMsg\n        })\n        var x = document.getElementById(\"snackbar\");\n        x.className = \"show\";\n        setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n      }\n\n    render() {\n        return (\n            <div id=\"snackbar\" >{this.state.errMsg}</div>\n        )\n    }\n}\n\nexport default Snackbar;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postCallApi } from '../../utils/utils';\nimport {  API_URL } from '../../constants/index';\nimport '../../assets/css/home.css';\nimport Snackbar from '../error-msgs-bsr/err-msg-bar';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.showError = React.createRef();\n    this.state = {\n        loginFormOpen: 'login',\n        nShow: true,\n        disable: true,\n        password: ''\n    }\n  }\n\n  registerUser = (e) =>{\n    e.preventDefault();\n    var email = document.getElementById(\"remail\").value;\n    var password = document.getElementById(\"rpassword\").value;\n    var passwordCheck = document.getElementById(\"checkPassword\").value;\n    var name = document.getElementById('rname').value;\n    if(passwordCheck !== password){\n      alert(\"Passwords doesn't match\");\n      return;\n    }\n\n    postCallApi(`${API_URL}/users/register`, {\n      name: name,  \n      email: email,\n      password: password\n  }).then((data) => {\n      if (data.success) {\n        this.setState({\n            loginFormOpen: 'login'\n        })\n          // document.getElementById(\"myForm\").reset();        \n      } else {\n        this.showError.current.showSnackbar(data.message);\n      }\n  })\n  .catch((error) => {\n    alert('Something Went Wrong!');\n  });\n  }\n\n  loginUser = (e) =>{\n      console.log('login');\n    e.preventDefault();\n    var email = document.getElementById(\"lemail\").value;\n    var password = document.getElementById(\"lpassword\").value;\n    postCallApi(`${API_URL}/users/login`, {\n      email: email,\n      password: password\n  }).then((data) => {\n      if (data && data.success) {\n              localStorage.setItem(\"token\", data.data.token);\n              localStorage.setItem(\"username\", data.data.user._id);\n              this.props.history.push({\n                pathname: '/inner-page',\n            });\n          // document.getElementById(\"myForm\").reset();          \n      } else {\n        this.showError.current.showSnackbar(data.message);\n      }\n  })\n  .catch((error) => {\n    alert('Something Went Wrong!');\n  });\n  }\n\n  togglePopup = (formName) => {\n    this.setState({\n      loginFormOpen : formName\n    })\n  }\n  showWarning = (e) => {\n    if(e.target.value !== this.state.password) {\n        this.setState({\n            nShow: false,\n            disable: true\n        });\n    }else {\n        this.setState({\n            nShow: true,\n            disable: false\n        });\n    }\n  }\n  setPass = (e) => {\n      this.setState({\n          password: e.target.value\n      })\n  }\n  forgotPwd = (e) => {\n    e.preventDefault();\n    var email = document.getElementById(\"femail\").value;\n    postCallApi(`${API_URL}/users/forgot-pwd`, {\n      email: email\n    }).then((data) => {\n        this.showError.current.showSnackbar(data.message);\n        this.setState({\n            loginFormOpen: 'login'\n        });\n    })\n    .catch((error) => {\n       alert('Something Went wrong!');\n    });\n  }\n\n  render() {\n    return (\n      <div>  \n        <div className=\"App\">\n            {this.state.loginFormOpen==='login' && <div className=\"login\">\n            <div className=\"container\" style={{margin:'auto'}}>\n            <h1>Ceegees.</h1>\n            \n            <form id=\"rForm\" name=\"contact-us-form\" onSubmit={(e)=>this.loginUser(e)}>\n                <input type=\"email\" required id=\"lemail\" placeholder=\"Email\"/>\n                <input type=\"password\" required id=\"lpassword\" placeholder=\"Password\"/>\n                <mark style={{marginLeft: \"208px\", color: \"blue\", cursor: \"pointer\"}} onClick={() => this.togglePopup('forgot')} >Forgot Password?</mark>\n                <p ref='wrongpassword' style={{ fontFamily: \"Lato\",color: \"#2a0ad0\",fontSize: \"15px\",marginTop:8, fontWeight:600, textAlign:\"center\" }}></p>\n                <input type=\"submit\" value=\"Sign In\"/>\n                <p>Don't have an account? <span onClick = {()=>this.togglePopup('register')}>Register Now</span></p>\n            </form>\n            </div>\n            </div>}\n            {this.state.loginFormOpen==='register' && <div className=\"login\">\n            <div className=\"container\" style={{margin:'auto'}}>\n            <h1>Ceegees.</h1>\n            \n            <form id=\"lForm\" name=\"contact-us-form\" onSubmit={(e)=>this.registerUser(e)}>\n                <input type=\"text\" id=\"rname\" required placeholder=\"Name\"/> \n                <input type=\"email\" id=\"remail\" required placeholder=\"Email\"/>\n                <input type=\"password\" id=\"rpassword\" onChange={(e) => this.setPass(e)} required placeholder=\"Password\"/>\n                <input type=\"password\" id=\"checkPassword\" onChange={(e) => this.showWarning(e)} required placeholder=\"Repeat Password\"/>\n                <mark style={{\"marginLeft\": \"30px\", \"color\": \"red\"}} className={ this.state.nShow ? \"nShow\": \"\" }>Password doen't match</mark>\n                <input type=\"submit\" value=\"Sign Up\" className={ this.state.disable ? \"nDisble\": \"\" } disabled={this.state.disable}/>\n                <p>Already have an account? <span onClick = {() => this.togglePopup('login')}>Login Now</span></p>\n            </form>\n            </div>\n            </div>}\n            {this.state.loginFormOpen==='forgot' && <div className=\"login\">\n            <div className=\"container\" style={{margin:'auto'}}>\n            <h1>Ceegees.</h1>\n            \n            <form id=\"fForm\" name=\"contact-us-form\" onSubmit={(e)=>this.forgotPwd(e)}>\n                <input type=\"email\" id=\"femail\" required placeholder=\"Email\"/>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n            </div>\n            </div>}\n        </div>\n        <Snackbar ref={this.showError} />\n    </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      dispatch: dispatch\n  }\n};\nexport default connect(state => state, mapDispatchToProps)(Home);","import React, { Component } from 'react';\n\n\nclass InnerPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    render() { \n        return (\n            <h3>You are now logged In!</h3>\n        )\n    }\n}\n\nexport default InnerPage;","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport { postCallApi } from '../../utils/utils';\nimport { API_URL } from '../../constants/index';\nimport Snackbar from '../error-msgs-bsr/err-msg-bar';\n\nclass ResetPwd extends Component {\n    constructor(props) {\n        super(props);\n        this.showError = React.createRef();\n        this.state = {\n            nShow: true,\n            disable: true,\n            email: '',\n            verCode: ''\n        }\n    }\n\n    componentDidMount() {\n        const values = queryString.parse(this.props.location.search)\n        this.setState({\n            email: values.email,\n            verCode: values.verCode\n        })\n      }\n\n    showWarning = (e) => {\n        if(e.target.value !== this.state.password) {\n            this.setState({\n                nShow: false,\n                disable: true\n            });\n        }else {\n            this.setState({\n                nShow: true,\n                disable: false\n            });\n        }\n      }\n      setPass = (e) => {\n          this.setState({\n              password: e.target.value\n          })\n      }\n\n      resetPassword = (e) => {\n        e.preventDefault();\n        var email = this.state.email;\n        var verCode = this.state.verCode;\n        var password = document.getElementById(\"rpassword\").value;\n        postCallApi(`${API_URL}/users/reset-password`, {\n          email: email,\n          password: password,\n          verCode: verCode\n        }).then((data) => {\n            if (data && data.success) {\n                    this.showError.current.showSnackbar('Password Reset!');  \n                    this.props.history.push({\n                        pathname: '/',\n                    }); \n            } else {\n                this.showError.current.showSnackbar(data.message);\n            }\n        })\n        .catch((error) => {\n            alert('Something Went Wrong!');\n        });\n      }\n\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"login\">\n                    <div className=\"container\" style={{margin:'auto'}}>\n                        <h1>Ceegees.</h1>\n                        \n                        <form id=\"lForm\" name=\"contact-us-form\" onSubmit={(e)=>this.resetPassword(e)}>\n                            <input type=\"password\" id=\"rpassword\" onChange={(e) => this.setPass(e)} required placeholder=\"Password\"/>\n                            <input type=\"password\" id=\"checkPassword\" onChange={(e) => this.showWarning(e)} required placeholder=\"Repeat Password\"/>\n                            <mark style={{\"marginLeft\": \"30px\", \"color\": \"red\"}} className={ this.state.nShow ? \"nShow\": \"\" }>Password doen't match</mark>\n                            <input type=\"submit\" value=\"Sign Up\" className={ this.state.disable ? \"nDisble\": \"\" } disabled={this.state.disable}/>\n                        </form>\n                    </div>\n                </div>\n                <Snackbar ref={this.showError} />\n            </div>\n        )\n    }\n}\n\nexport default ResetPwd;","import React from 'react';\nimport {  Redirect } from 'react-router'\nimport {\n    BrowserRouter as Router,\n    Route\n} from 'react-router-dom';\nimport Header from '../containers/header/header.container';\nimport Home from '../containers/home/home.container';\nimport InnerPage from '../containers/inner-page/innner-page.container'\nimport ResetPwd from '../containers/reset-password/reset-password.container';\nconst token = localStorage.getItem(\"token\");\nexport default (\n\n    <Router>\n            <Route exact path=\"*\" component={Header} />\n            <Route exact path=\"/\" render={() => (\n            token ? (\n                <Redirect to=\"/inner-page\"/>\n            ) : (\n                <Home/>\n            )\n            )} />\n            <Route exact path=\"/inner-page\" render={() => (\n            !token ? (\n                <Redirect to=\"/\"/>\n            ) : (\n                <InnerPage/>\n            )\n            )}/>\n            <Route exact path=\"/reset-password\" component={ResetPwd} />\n    </Router>\n\n)","import {\n    LOGIN_USER\n} from '../../constants/index';\n\n// import uniqBy from 'lodash/uniqBy';\n// import union from 'lodash/union';\n// import pull from 'lodash/pull';\n// import findIndex from 'lodash/findIndex';\n\nconst initialState = {\n    loading: false\n};\n\nexport const homeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        \n        case LOGIN_USER: {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n\n        default:\n            return {\n                ...state\n            }\n    }\n\n}","import {\n    combineReducers\n} from 'redux';\nimport {\n    homeReducer\n} from './component.reduers/reducer.home';\n\n/**\n * Rootreducer to map the reducer state with global state\n * @type {Reducer<any>}\n */\nexport const rootReducer = combineReducers({\n    homeReducer\n});","import { createStore } from 'redux';\nimport { rootReducer } from \"../reducers/index\";\n\n/**\n * Global store for storing global states.\n * @type {Store<any>}\n */\n\n \nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport Router from \"./router/index\";\nimport store from './store/index';\nimport { Provider } from 'react-redux';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}>\n    {Router}\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}